//This build script can upload built jars to a maven repo.
//
//Usage:
//  Use task 'uploadGithubAndClean'. It will build, generate jars and publish them.
//  gradle params:
//    -PnewMavenRepo=1
//      Create a new maven repo, instead of reading from Github.
//    -PpublishVersion=<string>
//      Use the given string as the project version.
//    -Dorg.ajoberstar.grgit.auth.username=<string>
//      The username in authentication to Github repo.
//    -Dorg.ajoberstar.grgit.auth.password=<string>
//      The password in authentication to Github repo.

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
            name = "lidev"
            url = "http://maven.li-dev.cn/"
        }
		maven {
            name = "lidev-dev"
            url = "http://maven.li-dev.cn/dev/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
		classpath 'cn.lidev:LIteBuilder:1.0.0'
//		classpath 'me.tatarka:gradle-retrolambda:3.2.2'
    }
}

apply plugin: 'litebuilder'
//apply plugin: 'me.tatarka.retrolambda'

litebuilder {
    name = "AcademyCraft"
    group = "cn.academy"

    //The bucket name of OSS to upload.
    ossBucket = "libuild"
    //The folder name of OSS to upload.
    //You can also put / into the string to upload to a child folder
    uploadDir = "dev"

    forgeVersion = "1.7.10-10.13.4.1448-1.7.10"
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

    jarClasses {
        exclude 'cn/annoreg/**/*'
        exclude 'cn/liutils/**/*'
    }

    coremod {
        plugin = 'cn.academy.core.ACCorePlugin'
        containsFMLMod = true
    }
	
    pom {
        groupId = project.group
        version = project.version
        artifactId = project.archivesBaseName
        project {
            name project.archivesBaseName
            packaging 'jar'
            description 'A Minecraft mod about superability, including its aquiring, upgrading and using.'
            url 'https://github.com/LambdaInnovation/AcademyCraft'

            issueManagement {
                system 'github'
                url 'https://github.com/LambdaInnovation/AcademyCraft/issues'
            }

            licenses {
                license {
                    name 'GNU General Public License.'
                    url 'http://www.gnu.org/licenses/gpl.html'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'LambdaInnovation'
                    name 'LambdaInnovation'
                    roles { role 'developer' }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
	maven {
        name = "lidev"
        url = "http://maven.li-dev.cn/"
    }
	maven {
        name = "lidev-dev"
        url = "http://maven.li-dev.cn/dev/"
    }
	maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven/"
	}
}
dependencies {
	compile 'cn.annoreg:AnnotationRegistry:d1.0b1:dev'
	compile 'cn.liutils:LIUtils:d1.0b2:dev'
	compile 'net.industrial-craft:industrialcraft-2:2.2.717-experimental:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev'
	modReobf 'net.industrial-craft:industrialcraft-2:2.2.717-experimental:api'
}
